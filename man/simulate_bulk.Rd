% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulator.R
\name{simulate_bulk}
\alias{simulate_bulk}
\title{simulate whole pseudo-bulk RNAseq dataset}
\usage{
simulate_bulk(
  data,
  scenario = c("even", "random", "mirror_db", "controlled", "unique", "custom"),
  scaling_factor = c("NONE", "census", "spike_in", "custom", "read-number",
    "expressed_genes", "annotation_column"),
  scaling_factor_single_cell = TRUE,
  controlled_cell_type = NULL,
  controlled_amount = NULL,
  unique_cell_type = NULL,
  custom_scenario_data = NULL,
  custom_scaling_vector = NULL,
  balance_uniform_mirror_scenario = 0.01,
  remove_bias_in_counts = TRUE,
  remove_bias_in_counts_method = "read-number",
  norm_counts = TRUE,
  nsamples = 100,
  ncells = 1000,
  total_read_counts = NULL,
  whitelist = NULL,
  blacklist = NULL,
  ncores = 1
)
}
\arguments{
\item{data}{(mandatory) \link[SummarizedExperiment]{SummarizedExperiment} object}

\item{scenario}{(mandatory) select on of the pre-defined cell-type fraction scenarios; possible are: \code{even},\code{random},\code{mirror_db},\code{unique},\code{controlled}; you can also use the \code{custom} scenario, where you need to set the \code{custom_scenario_data} parameter.}

\item{scaling_factor}{(mandatory) name of scaling factor; possible are: \code{census}, \code{spike_in}, \code{read-number}, \code{expressed_genes}, \code{custom} or \code{NONE} for no scaling factor}

\item{scaling_factor_single_cell}{boolean: decide if a scaling value for each single cell is calculated (default) or the median of all scaling values for each cell type is calculated}

\item{controlled_cell_type}{name of cell-type used for \code{controlled} scenario}

\item{controlled_amount}{fraction of cell-type used for \code{controlled} scenario; must be between \code{0} and \code{0.99}}

\item{unique_cell_type}{name of cell-type for \code{unique} scenario}

\item{custom_scenario_data}{dataframe; needs to be of size \code{nsamples} x number_of_cell_types, where each sample is a row and each entry is the cell-type fraction. Rows need to sum up to 1.}

\item{custom_scaling_vector}{named vector with custom scaling values for cell-types. Cell-types that do not occur in this vector but are present in the dataset will be set to 1; mandatory for \code{custom} scaling factor}

\item{balance_uniform_mirror_scenario}{balancing value for the \code{uniform} and \code{mirror_db} scenarios: increasing it will result in more diverse simulated fractions. To get the same fractions in each sample, set to 0. Default is 0.01.}

\item{remove_bias_in_counts}{boolean; if TRUE (default) the internal mRNA bias that is present in count data will be \emph{removed} using the number of reads mapped to each cell}

\item{remove_bias_in_counts_method}{'read-number' (default) or 'gene-number'; method with which the mRNA bias in counts will be removed}

\item{norm_counts}{boolean; if TRUE (default) the samples simulated with counts will be normalized to CPMs}

\item{nsamples}{numeric; number of samples in pseudo-bulk RNAseq dataset (default = 100)}

\item{ncells}{numeric; number of cells in each dataset (default = 1000)}

\item{total_read_counts}{numeric; sets the total read count value for each sample}

\item{whitelist}{list; give a list of cell-types you want to keep for the simulation; if NULL, all are used}

\item{blacklist}{list; give a list of cell-types you want to remove for the simulation; if NULL, all are used; is applied after whitelist}

\item{ncores}{numeric; number of cores to use (default = 1)}
}
\value{
named list; \code{bulk} a \link[SummarizedExperiment]{SummarizedExperiment} object, where the assays store the simulated bulk RNAseq datasets. Can hold either one or two assays, depending on how many matrices were present in the dataset
\code{cell-fractions} is a dataframe with the simulated cell-fractions per sample;
\code{scaling_vector} scaling value for each cell in dataset
}
\description{
This function allows you to create a full pseudo-bulk RNAseq dataset. You need to provide a \link[SummarizedExperiment]{SummarizedExperiment} from which the cells
will be sampled for the simulation. Also a \code{scenario} has to be selected, where you can choose how the cells will be sampled and a
\code{scaling_factor} on how the read counts will be transformed proir to the simulation.
}
\examples{
\dontrun{
#generate sample single-cell data to work with:

counts <- Matrix::Matrix(matrix(rpois(3e5, 5), ncol=300), sparse = TRUE)
tpm <- Matrix::Matrix(matrix(rpois(3e5, 5), ncol=300), sparse = TRUE)
tpm <- Matrix::t(1e6*Matrix::t(tpm)/Matrix::colSums(tpm))

colnames(counts) <- paste0("cell_",rep(1:300))
colnames(tpm) <- paste0("cell_",rep(1:300))
rownames(counts) <- paste0("gene_",rep(1:1000))
rownames(tpm) <- paste0("gene_",rep(1:1000))

annotation <- data.frame("ID"=paste0("cell_",rep(1:300)),
                         "cell_type"=c(rep("T cells CD4",50),
                                       rep("T cells CD8",50),
                                       rep("Macrophages",100),
                                       rep("NK cells",10),
                                       rep("B cells",70),
                                       rep("Monocytes",20)))

dataset <- SimBu::dataset(annotation = annotation,
                          count_matrix = counts,
                          tpm_matrix = tpm,
                          name = "test_dataset")

# this creates a basic pseudo-bulk dataset with uniform cell-type distribution
# and no additional transformation of the data with 10 samples and 2000 cells each

s<-simulate_bulk(dataset,
              scenario="even",
              scaling_factor="NONE",
              nsamples=10,
              ncells=100)

# use a blacklist to exclude certain cell-types for the simulation
s<-simulate_bulk(dataset,
              scenario="even",
              scaling_factor="NONE",
              nsamples=10,
              ncells=2000,
              blacklist=c("Monocytes","Macrophages"))


# use the unique scenario to only have B cells
s<-simulate_bulk(dataset,
              scenario="unique",
              scaling_factor="NONE",
              nsamples=10,
              ncells=100,
              unique_cell_type="B cells")

# simulate a dataset with custom cell-type fraction for each of the 3 samples
fractions <- data.frame("B cells"=c(0.2,0.4,0.2),
                        "T cells CD4"=c(0.4,0.2,0.1),
                        "Macrophages"=c(0.4,0.4,0.7), check.names = FALSE)
s<-simulate_bulk(dataset,
              scenario="custom",
              scaling_factor="NONE",
              nsamples=3,
              ncells=2000,
              custom_scenario_data=fractions)
}

}
