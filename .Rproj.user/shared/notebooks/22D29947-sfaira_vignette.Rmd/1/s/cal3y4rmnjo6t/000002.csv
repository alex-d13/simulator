"0","SimBu::dataset_sfaira_multiple(sfaira_setup = setup_list,"
"0","                               organisms = ""Homo sapiens"", "
"0","                               tissues = ""pancreas"", "
"0","                               name=""human_pancreas"")"
"1","[1]"
"1"," ""Starting to download dataset from Sfaria with organism: Homo sapiens , tissue: pancreas and assay: """
"1","
"
"1","[1]"
"1"," ""Removing datasets without cell-type annotation..."""
"1","
"
"1","Ontology <class 'sfaira.versions.metadata.base.OntologyMondo'> is not a DAG, treat child-parent reasoning with care.
Ontology <class 'sfaira.versions.metadata.base.OntologyUberon'> is not a DAG, treat child-parent reasoning with care.
Ontology <class 'sfaira.versions.metadata.base.OntologyUberonLifecyclestage'> is not a DAG, treat child-parent reasoning with care.
"
"1","[1]"
"1"," ""Downloading datasets..."""
"1","
"
"2","/nfs/home/students/adietrich/.cache/R/basilisk/1.4.0/SimBu/0.99.0/SimBu_env/lib/python3.9/site-packages/sfaira/data/dataloaders/loaders/d10_1016_j_cmet_2016_08_020/human_pancreas_2016_smartseq2_segerstolpe_001.py:46: FutureWarning: X.dtype being converted to np.float32 from int64. In the next version of anndata (0.9) conversion will not be automatic. Pass dtype explicitly to avoid this warning. Pass `AnnData(X, dtype=X.dtype, ...)` to get the future behavour.
  adata = anndata.AnnData(df)
"
"2","/nfs/home/students/adietrich/.cache/R/basilisk/1.4.0/SimBu/0.99.0/SimBu_env/lib/python3.9/site-packages/anndata/_core/anndata.py:1830: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`.
  utils.warn_names_duplicates(""var"")
"
"2","/nfs/home/students/adietrich/.cache/R/basilisk/1.4.0/SimBu/0.99.0/SimBu_env/lib/python3.9/site-packages/sfaira/data/dataloaders/loaders/d10_1016_j_cell_2017_09_004/human_isletoflangerhans_2017_smartseq2_enge_001.py:48: FutureWarning: X.dtype being converted to np.float32 from int64. In the next version of anndata (0.9) conversion will not be automatic. Pass dtype explicitly to avoid this warning. Pass `AnnData(X, dtype=X.dtype, ...)` to get the future behavour.
  adata = ad.AnnData(pd.concat(dfs, axis=1).iloc[1:-6].T)
"
"1","[1]"
"1"," ""Streamlining features & meta-data..."""
"1","
"
"2","/nfs/home/students/adietrich/.cache/R/basilisk/1.4.0/SimBu/0.99.0/SimBu_env/lib/python3.9/site-packages/scipy/sparse/_index.py:116: SparseEfficiencyWarning: Changing the sparsity structure of a csc_matrix is expensive. lil_matrix is more efficient.
  self._set_arrayXarray_sparse(i, j, x)
"
"2","WARNING:root:name and ontology keys are both missing
"
"2","/nfs/home/students/adietrich/.cache/R/basilisk/1.4.0/SimBu/0.99.0/SimBu_env/lib/python3.9/site-packages/anndata/_core/anndata.py:1785: FutureWarning: X.dtype being converted to np.float32 from float64. In the next version of anndata (0.9) conversion will not be automatic. Pass dtype explicitly to avoid this warning. Pass `AnnData(X, dtype=X.dtype, ...)` to get the future behavour.
  [AnnData(sparse.csr_matrix(a.shape), obs=a.obs) for a in all_adatas],
"
"2","Using rownames for cell-IDs.
"
"2","Filtering genes...
"
"2","Created dataset.
"
"1","class:"
"1"," "
"1","SummarizedExperiment"
"1"," "
"1","
"
"1","dim:"
"1"," "
"1","21449"
"1"," "
"1","12467"
"1"," "
"1","
"
"1","metadata(0):"
"1","
"
"1","assays(1): counts"
"1","
"
"1","rownames(21449): TSPAN6 TNMD ... F8A2 F8A1"
"1","
"
"1","rowData names(0):"
"1","
"
"1","colnames(12467): human_pancreas_1 human_pancreas_2 ... human_pancreas_12466 human_pancreas_12467"
"1","
"
"1","colData names(5): cell_ID cell_ID.old cell_type nReads_SimBu nGenes_SimBu"
"1","
"
"1","Downloading: E-MTAB-5061.processed.1.zip
Downloading: E-MTAB-5061.sdrf.txt
Downloading: GSE81547_RAW.tar
Downloading: GSE81547_series_matrix.txt.gz
Downloading: baron16.processed.h5ad
loading homosapiens_pancreas_2016_smartseq2_segerstolpe_001_10.1016/j.cmet.2016.08.020
loading homosapiens_isletoflangerhans_2017_smartseq2_enge_001_10.1016/j.cell.2017.09.004
loading homosapiens_pancreas_2016_indrop_baron_001_10.1016/j.cels.2016.08.011
"
