"0","```r
sources <- unique(data_01$data_long$source_short)

combinations <- expand.grid(sources, sources)
combinations <- combinations[combinations$Var1 != combinations$Var2,]
combinations$combi_name <- paste0(combinations$Var1,\" vs. \",combinations$Var2)

merge_df <- data_01$data_long
merge_df$source2 <- NULL

tmp <- merge(merge_df, combinations, by.x=\"source_short\", by.y=\"Var1\", all.x=T, allow.cartesian=TRUE)
tmp2 <- merge(tmp, merge_df, by.x=\"Var2\", by.y=\"source_short\", allow.cartesian = T)
final <- tmp2[(tmp2$type.x == tmp2$type.y),]
colnames(final) <- c(\"Source_x\", \"Source_y\",  \"mRNA_y\", \"type_y\",\"long_y\",\"combi_name\",\"mRNA_x\",\"type_x\",\"long_x\")
final <- subset(final, !is.na(mRNA_x) & !is.na(mRNA_y))
final[,pearson_cor:=cor(mRNA_y, mRNA_x, method=\"pearson\", use=\"complete.obs\"), by=combi_name]
cors <- unique(final[,c(\"combi_name\",\"pearson_cor\")])

# comb_to_show <- c(\"EP vs. HA [census]\", \"EP vs. HA [expressed_genes]\", \"EP vs. HA [read_number]\", 
#                   \"EP vs. MY [census]\", \"EP vs. MY [expressed_genes]\", \"EP vs. MY [read_number]\",
#                   \"EP vs. TV [census]\", \"EP vs. TV [expressed_genes]\", \"EP vs. TV [read_number]\", \"EP vs. TV [spike_in]\",
#                   \"MC vs. HA [census]\", \"MC vs. HA [expressed_genes]\", \"MC vs. HA [read_number]\", 
#                   \"MC vs. MY [census]\", \"MC vs. MY [expressed_genes]\", \"MC vs. MY [read_number]\",
#                   \"MC vs. TV [census]\", \"MC vs. TV [expressed_genes]\", \"MC vs. TV [read_number]\", \"MC vs. TV [spike_in]\")

comb_to_show <- c('TV [spike_in] vs. HA [census]', 'TV [spike_in] vs. HA [expressed_genes]', 'TV [spike_in] vs. HA [read_number]',
                  'TV [spike_in] vs. MY [census]', 'TV [spike_in] vs. MY [expressed_genes]', 'TV [spike_in] vs. MY [read_number]',
                  'TV [spike_in] vs. TV [census]', 'TV [spike_in] vs. TV [expressed_genes]', 'TV [spike_in] vs. TV [read_number]')

final <-  final[final$combi_name %in% comb_to_show,]
```"
